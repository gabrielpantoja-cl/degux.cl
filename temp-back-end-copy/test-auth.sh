#!/bin/bash

# ==========================================
# üß™ Script de Test de Autenticaci√≥n
# ==========================================
# Proyecto: degux.cl
# Descripci√≥n: Prueba endpoints de autenticaci√≥n en producci√≥n
# Uso: ./scripts/test-auth.sh [local|vps]
# ==========================================

set -e

# Colores
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Determinar modo
MODE="${1:-vps}"

echo "üß™ Test de Autenticaci√≥n - degux.cl"
echo "===================================="
echo ""

if [ "$MODE" = "vps" ]; then
  echo "üìç Modo: VPS (Producci√≥n)"
  BASE_URL="https://degux.cl"
else
  echo "üìç Modo: Local (Desarrollo)"
  BASE_URL="http://localhost:3000"
fi

echo "üåê URL Base: $BASE_URL"
echo ""

# Test 1: Health Check
echo "üè• Test 1: Health Check de la aplicaci√≥n..."
echo "--------------------------------------------"

HTTP_CODE=$(curl -s -o /dev/null -w "%{http_code}" "$BASE_URL/api/health" 2>/dev/null || echo "000")

if [ "$HTTP_CODE" = "200" ]; then
  echo -e "${GREEN}‚úÖ Health check OK (HTTP $HTTP_CODE)${NC}"
  HEALTH_DATA=$(curl -s "$BASE_URL/api/health" | jq . 2>/dev/null || echo "{}")
  echo "$HEALTH_DATA" | head -10
else
  echo -e "${RED}‚ùå Health check FAILED (HTTP $HTTP_CODE)${NC}"
  echo "   La aplicaci√≥n no est√° respondiendo correctamente"
fi

echo ""

# Test 2: NextAuth Providers
echo "üîê Test 2: Verificando proveedores de NextAuth..."
echo "--------------------------------------------------"

PROVIDERS=$(curl -s "$BASE_URL/api/auth/providers" 2>/dev/null || echo "{}")

if echo "$PROVIDERS" | jq -e '.google' > /dev/null 2>&1; then
  echo -e "${GREEN}‚úÖ Proveedor Google OAuth configurado${NC}"
  echo "$PROVIDERS" | jq .
else
  echo -e "${RED}‚ùå Proveedor Google OAuth NO configurado${NC}"
  echo "   Respuesta: $PROVIDERS"
fi

echo ""

# Test 3: NextAuth Session Endpoint
echo "üé´ Test 3: Verificando endpoint de sesi√≥n..."
echo "---------------------------------------------"

SESSION=$(curl -s "$BASE_URL/api/auth/session" 2>/dev/null || echo "{}")

if echo "$SESSION" | grep -q "user"; then
  echo -e "${GREEN}‚úÖ Sesi√≥n activa detectada${NC}"
  echo "$SESSION" | jq .
else
  echo -e "${YELLOW}‚ö†Ô∏è  No hay sesi√≥n activa (esperado si no est√°s logueado)${NC}"
  echo "   Respuesta: $SESSION"
fi

echo ""

# Test 4: Redirecci√≥n de Dashboard
echo "üîí Test 4: Verificando protecci√≥n de Dashboard..."
echo "--------------------------------------------------"

DASHBOARD_REDIRECT=$(curl -s -I "$BASE_URL/dashboard" 2>/dev/null | grep -i "location:" || echo "")

if echo "$DASHBOARD_REDIRECT" | grep -q "/auth/signin"; then
  echo -e "${GREEN}‚úÖ Dashboard protegido correctamente${NC}"
  echo "   Redirige a: /auth/signin"
elif echo "$DASHBOARD_REDIRECT" | grep -q "200"; then
  echo -e "${YELLOW}‚ö†Ô∏è  Dashboard accesible sin autenticaci√≥n${NC}"
  echo "   Middleware podr√≠a estar deshabilitado"
else
  echo -e "${BLUE}‚ÑπÔ∏è  Dashboard response:${NC}"
  curl -s -I "$BASE_URL/dashboard" | head -5
fi

echo ""

# Test 5: API P√∫blica (sin autenticaci√≥n)
echo "üåê Test 5: Verificando API p√∫blica..."
echo "--------------------------------------"

PUBLIC_API=$(curl -s "$BASE_URL/api/public/map-config" 2>/dev/null || echo "{}")

if echo "$PUBLIC_API" | jq -e '.success' > /dev/null 2>&1; then
  echo -e "${GREEN}‚úÖ API p√∫blica funcionando${NC}"
  echo "$PUBLIC_API" | jq . | head -15
else
  echo -e "${YELLOW}‚ö†Ô∏è  API p√∫blica no responde como se esperaba${NC}"
  echo "   Respuesta: $PUBLIC_API"
fi

echo ""

# Test 6: CORS Headers (solo para VPS)
if [ "$MODE" = "vps" ]; then
  echo "üîó Test 6: Verificando headers CORS..."
  echo "---------------------------------------"

  CORS_HEADERS=$(curl -s -I -H "Origin: https://pantojapropiedades.cl" "$BASE_URL/api/public/map-data" 2>/dev/null | grep -i "access-control" || echo "")

  if [ ! -z "$CORS_HEADERS" ]; then
    echo -e "${GREEN}‚úÖ Headers CORS configurados${NC}"
    echo "$CORS_HEADERS"
  else
    echo -e "${YELLOW}‚ö†Ô∏è  No se detectaron headers CORS${NC}"
  fi

  echo ""
fi

# Test 7: SSL Certificate (solo para VPS)
if [ "$MODE" = "vps" ]; then
  echo "üîí Test 7: Verificando certificado SSL..."
  echo "------------------------------------------"

  SSL_INFO=$(curl -vI https://degux.cl 2>&1 | grep -E "SSL|TLS|subject:" | head -5)

  if echo "$SSL_INFO" | grep -q "TLS"; then
    echo -e "${GREEN}‚úÖ Certificado SSL v√°lido${NC}"
    echo "$SSL_INFO"
  else
    echo -e "${RED}‚ùå Problema con certificado SSL${NC}"
  fi

  echo ""
fi

# Test 8: Logs del contenedor (solo para VPS)
if [ "$MODE" = "vps" ]; then
  echo "üìú Test 8: √öltimos logs de autenticaci√≥n..."
  echo "--------------------------------------------"

  echo "Ejecutando en VPS: ssh gabriel@167.172.251.27 'docker logs degux-web --tail 50 2>&1 | grep AUTH'"
  echo ""
  echo "Nota: Debes tener acceso SSH al VPS para ver logs"
  echo ""
fi

# Resumen final
echo "=================================================="
echo "üìä Resumen de Tests:"
echo "=================================================="
echo ""

PASSED=0
FAILED=0

# Health check
if [ "$HTTP_CODE" = "200" ]; then
  echo -e "${GREEN}‚úÖ Health Check${NC}"
  PASSED=$((PASSED + 1))
else
  echo -e "${RED}‚ùå Health Check${NC}"
  FAILED=$((FAILED + 1))
fi

# Google OAuth
if echo "$PROVIDERS" | jq -e '.google' > /dev/null 2>&1; then
  echo -e "${GREEN}‚úÖ Google OAuth Provider${NC}"
  PASSED=$((PASSED + 1))
else
  echo -e "${RED}‚ùå Google OAuth Provider${NC}"
  FAILED=$((FAILED + 1))
fi

# API P√∫blica
if echo "$PUBLIC_API" | jq -e '.success' > /dev/null 2>&1; then
  echo -e "${GREEN}‚úÖ API P√∫blica${NC}"
  PASSED=$((PASSED + 1))
else
  echo -e "${RED}‚ùå API P√∫blica${NC}"
  FAILED=$((FAILED + 1))
fi

echo ""

if [ $FAILED -eq 0 ]; then
  echo -e "${GREEN}‚úÖ Todos los tests pasaron ($PASSED/$((PASSED + FAILED)))${NC}"
  echo ""
  echo "üéâ La autenticaci√≥n est√° configurada correctamente"
  echo ""
  echo "üß™ Prueba manual:"
  echo "1. Abre $BASE_URL en el navegador"
  echo "2. Intenta acceder a $BASE_URL/dashboard"
  echo "3. Deber√≠as ser redirigido a login"
  echo "4. Haz login con Google"
  echo "5. Deber√≠as poder acceder al dashboard"
  exit 0
else
  echo -e "${RED}‚ùå $FAILED tests fallaron${NC}"
  echo ""
  echo "üìù Acciones requeridas:"
  echo "1. Verificar variables de entorno: ./scripts/check-env.sh"
  echo "2. Verificar base de datos: ./scripts/check-db.sh"
  echo "3. Revisar logs del contenedor"
  echo "4. Verificar configuraci√≥n de Google OAuth"
  exit 1
fi